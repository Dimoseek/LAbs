#include <stdlib.h>
#include <iostream>

// Определение структуры TwoInts, содержащей две целочисленные переменные.
struct TwoInts
{
    int a;
    int b;
};

// Определение структуры StructWithArray, содержащей массив и указатель на целое число.
struct StructWithArray
{
    int arr[4];
    int* someNumber;
};

// Главная функция программы.
int main()
{
    // Создание объекта i2 типа TwoInts и инициализация его членов значениями по умолчанию (0).
    TwoInts i2 = { };

    // Присвоение значения переменной 'a' объекта i2.
    i2.a = 5;

    // Присвоение значения переменной 'b' объекта i2.
    i2.b = 7;

    // Вывод значения переменной 'a'.
    std::cout << i2.a << std::endl;

    // Вывод значения переменной 'b'.
    std::cout << i2.b << std::endl;

    // Создание объекта s типа StructWithArray и инициализация его массива значениями по умолчанию (0).
    StructWithArray s = { };

    // Присвоение значения первому элементу массива объекта s.
    s.arr[0] = 10;

    // Создание объекта s1 типа StructWithArray и инициализация его массива значениями по умолчанию (0).
    StructWithArray s1 = { };

    // Присвоение значения первому элементу массива объекта s1.
    s1.arr[0] = 15;

    // Создание указателя sPointer, указывающего на объект s.
    StructWithArray* sPointer = &s;

    // Изменение значения первого элемента массива через указатель.
    sPointer->arr[0] = 20;

    // Вывод значения первого элемента массива объекта s.
    std::cout << s.arr[0] << std::endl;

    // Изменение значения первого элемента массива объекта s.
    s.arr[0] = 25;

    // Вывод значения первого элемента массива объекта s.
    std::cout << s.arr[0] << std::endl;

    // Изменение значения первого элемента массива через указатель.
    sPointer->arr[0] = 30;

    // Вывод значения первого элемента массива объекта s.
    std::cout << s.arr[0] << std::endl;

    // Изменение указателя, чтобы он указывал на объект s1.
    sPointer = &s1;

    // Изменение значения первого элемента массива через указатель.
    sPointer->arr[0] = 35;

    // Вывод значения первого элемента массива объекта s.
    std::cout << s.arr[0] << std::endl;

    // Вывод значения первого элемента массива объекта s1.
    std::cout << s1.arr[0] << std::endl;

    // Создание массива объектов structArray и инициализация их массивов значениями по умолчанию (0).
    StructWithArray structArray[2] = { };

    // Присвоение значения четвертому элементу массива первого объекта structArray.
    structArray[0].arr[3] = 77;

    // Присвоение указателю someNumber второго объекта structArray адреса четвертого элемента массива первого объекта.
    structArray[1].someNumber = &structArray[0].arr[3];

    // Присвоение указателю sPointer адреса объекта s.
    sPointer = &s;

    // Создание указателя pointer, указывающего на четвертый элемент массива объекта s.
    int* pointer = &sPointer->arr[3];

    // Изменение значения четвертого элемента массива объекта s.
    s.arr[3] = 72;

    // Вывод значения, на которое указывает указатель pointer.
    std::cout << *pointer;

    // Создание объекта memory типа StructWithArray и заполнение его нулями.
    StructWithArray memory;
    memset(&memory, 0, sizeof(StructWithArray));

    // Завершение программы.
    return 0;
}
